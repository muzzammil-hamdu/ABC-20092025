trigger:
- main

pool:
  name: 'batch11'
  demands:
    - agent.name -equals lin1

variables:
  RESOURCE_GROUP: 'myResourceGroup'
  ACR_NAME: 'mujjuacr123'
  ACR_LOGIN_SERVER: 'mujjuacr123.azurecr.io'
  IMAGE_NAME: 'myapp'
  IMAGE_TAG: 'latest'
  ACI_NAME: 'myapp-container'
  LOCATION: 'eastus'

stages:
- stage: BuildAndDeploy
  displayName: Build and Deploy Docker Container
  jobs:
  - job: BuildPushDeploy
    displayName: Build, Push, and Deploy
    steps:

    - task: AzureCLI@2
      displayName: 'Azure Login'
      inputs:
        azureSubscription: 'batch11'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "Azure CLI ready"

    - task: AzureCLI@2
      displayName: 'Build Docker Image'
      inputs:
        azureSubscription: 'batch11'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          docker build -t $(ACR_LOGIN_SERVER)/$(IMAGE_NAME):$(IMAGE_TAG) .

    - task: AzureCLI@2
      displayName: 'Push Docker Image to ACR'
      inputs:
        azureSubscription: 'batch11'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az acr login --name $(ACR_NAME)
          docker push $(ACR_LOGIN_SERVER)/$(IMAGE_NAME):$(IMAGE_TAG)

    - task: AzureCLI@2
      displayName: 'Deploy to Azure Container Instance'
      inputs:
        azureSubscription: 'batch11'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          REG_USERNAME=$(az acr credential show -n $(ACR_NAME) --query username -o tsv)
          REG_PASSWORD=$(az acr credential show -n $(ACR_NAME) --query passwords[0].value -o tsv)
          az container create \
            --resource-group $(RESOURCE_GROUP) \
            --name $(ACI_NAME) \
            --image $(ACR_LOGIN_SERVER)/$(IMAGE_NAME):$(IMAGE_TAG) \
            --cpu 1 --memory 1 \
            --os-type Linux \
            --registry-login-server $(ACR_LOGIN_SERVER) \
            --registry-username $REG_USERNAME \
            --registry-password $REG_PASSWORD \
            --dns-name-label $(ACI_NAME)-$RANDOM \
            --ports 80

    - task: AzureCLI@2
      displayName: 'Verify ACI Deployment'
      inputs:
        azureSubscription: 'batch11'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az container show \
            --resource-group $(RESOURCE_GROUP) \
            --name $(ACI_NAME) \
            --query "{FQDN:ipAddress.fqdn,State:instanceView.state}" -o table
